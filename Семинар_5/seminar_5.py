# Задача №31. 
# Последовательностью Фибоначчи называется
# последовательность чисел a0, a1, ..., an, ..., где
# a0 = 0, a1 = 1, ak = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21
# Задание необходимо решать через рекурсию

# def fib(n):
#     if n in range(0, 2):
#         return 1
#     return fib(n - 1) + fib(n - 2)

# m = int(input())
# print(fib(m))


# найти факториал через рекурсию

# def fact(n):
#     if n <= 1:
#         return 1
#     return n * fact(n - 1)

# n = int(input())
# print(fact(n))


# Задача №33. 
# Хакер Василий получил доступ к классному журналу и
# хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая
# заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1

# lst = [1, 3, 3, 3, 4]
# def recur(lst, res=[], min_el=min(lst), max_el=max(lst)):

#     if len(lst) == 0:
#         return res
#     if lst[0] == max_el:
#         res.append(min_el)
#     else:
#         res.append(lst[0])

#     return recur(lst[1:])

# print(recur(lst))





# Задача №35. 
# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes 

# def sim(n, d = 2):
#     if d * d > n:
#         return True
#     elif n % d == 0:
#         return False
#     return sim(n, d + 1)

# print(sim(8))




# Задача №37. 
# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3

# def reverse(num):
#     if num < 10:
#         return str(num)
#     return str(num % 10) + reverse(num // 10)

# print(reverse(34))
